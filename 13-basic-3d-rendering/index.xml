




  
	
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
	  

  
	
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
	  

  
	
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basic 3D Rendering :: K-State CIS 580 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/</link>
    <description>It’s all triangles!</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Aug 2023 11:18:05 -0500</lastBuildDate>
    <atom:link href="https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/01-introduction/</link>
      <pubDate>Tue, 24 Mar 2020 10:00:00 -0500</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/01-introduction/</guid>
      <description>The term “3D rendering” refers to converting a three-dimensional representation of a scene into a two-dimensional frame. While there are multiple ways to represent and render three-dimensional scenes (ray-tracing, voxels, etc.), games are dominated by a standardized technique supported by graphics card hardware. This approach is so ubiquitous that when we talk about 3D rendering in games, this is the approach we are typically referring to.&#xA;Remember that games are “real-time”, which means they must present a new frame every 1/30th of a second to create the illusion of motion.</description>
    </item>
    <item>
      <title>It Starts with Triangles</title>
      <link>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/02-it-starts-with-triangles/</link>
      <pubDate>Tue, 24 Mar 2020 10:00:00 -0500</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/02-it-starts-with-triangles/</guid>
      <description>You probably remember from our discussions of matrix math that we can create matrices to represent arbitrary transformations. Moreover, we can transform a vector by multiplying it by one of these transformation matrices. This is the mathematical foundations of hardware-accelerated 3D rendering. In fact, the GPU is nothing more than a processor optimized for performing matrix and vector operations.&#xA;We model our three-dimensional worlds with triangles. Lots and lots of triangles.</description>
    </item>
    <item>
      <title>Rendering a Textured Quad</title>
      <link>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/03-rendering-a-textured-quad/</link>
      <pubDate>Tue, 24 Mar 2020 10:00:00 -0500</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/03-rendering-a-textured-quad/</guid>
      <description>While the point of a TriangleStrip is to optimize by reducing the number of vertices, in most cases it still will have repeats, and it is difficult to define a complex mesh out of a single strip. Thus, in addition to vertices, we can provide indices to specific vertices. The collection of indices contains nothing more than integers referencing vertices in the vertices collection. This means each unique vertex needs to be defined exactly once, and the indices take on the role of defining the triangles by giving the position of each successive vertex in the triangle list in the vertex array.</description>
    </item>
    <item>
      <title>Rendering a Cube</title>
      <link>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/04-rendering-a-cube/</link>
      <pubDate>Tue, 24 Mar 2020 10:00:00 -0500</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/04-rendering-a-cube/</guid>
      <description>We’ll continue our exploration of the rendering pipeline with another shape - a cube. And as before, we’ll introduce another concept - vertex and index buffers.&#xA;For our triangle and quad, we drew our shapes using GraphicsDevice.DrawUserPrimitives&lt;T&gt;() and GraphicsDevice.DrawUserIndexedPrimitives&lt;T&gt;(). Our vertices and indices were simply arrays we declared normally, that we passed to the graphics card using the aforementioned methods. As with most variables we deal with in C#, the memory used by the vertices and indices arrays was allocated from the computer’s RAM.</description>
    </item>
    <item>
      <title>Summary</title>
      <link>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/05-summary/</link>
      <pubDate>Tue, 24 Mar 2020 10:00:00 -0500</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cis580/13-basic-3d-rendering/05-summary/</guid>
      <description>This wraps up our discussion of the basics of 3D rendering. As you might expect, this is just the basic foundations. From here we’ll explore using models, creating lighting effect, animations, and more. But all of these will depend on understanding and using these basic elements, so get comfortable with them!</description>
    </item>
  </channel>
</rss>